<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
	<!-- 引入外部属性文件 -->
	<properties resource="admin-config.properties" />

	<context id="Mysql" targetRuntime="MyBatis3Simple"
		defaultModelType="flat">
		<property name="beginningDelimiter" value="`" />
		<property name="endingDelimiter" value="`" />

		<!-- 配置通用Mapper的MBG插件相关信息 -->
		<plugin type="${mapper.plugin}">
			<property name="mappers" value="${mapper.Mapper}" />
		</plugin>

		<!-- 配置连接数据库的基本信息 -->
		<jdbcConnection driverClass="${druid.driverClassName}"
			connectionURL="${druid.url}" userId="${druid.username}" password="${druid.password}">
		</jdbcConnection>

		<!-- 配置Java实体类存放位置 -->
		<javaModelGenerator targetPackage="${targetModelPackage}"
			targetProject="${targetJavaProject}" />

		<!-- 配置XxxMapper.xml存放位置 -->
		<sqlMapGenerator targetPackage="${targetXMLPackage}"
			targetProject="${targetResourcesProject}" />

		<!-- 配置XxxMapper.java存放位置 -->
		<javaClientGenerator targetPackage="${targetMapperPackage}"
			targetProject="${targetJavaProject}" type="XMLMAPPER" />

		<!-- 根据数据库表生成Java文件的相关规则 -->
		<!-- tableName="%"表示数据库中所有表都参与逆向工程，此时使用默认规则 -->
		<!-- 默认规则：table_dept→TableDept -->
		<!-- 不符合默认规则时需要使用tableName和domainObjectName两个属性明确指定 -->

		<!-- <table tableName="fanblog_user_friend" domainObjectName="UserFriend"> 
			<generatedKey column="user_id friend_user_id" sqlStatement="Mysql" identity="true" 
			/> </table> 
			
		<table tableName="fanblog_user" domainObjectName="User">
			<generatedKey column="user_id" sqlStatement="Mysql"
				identity="true" />
		</table>
		-->
		<table tableName="fanblog_sign_in" domainObjectName="SignIn"></table>
		
		<table tableName="fanblog_topic" domainObjectName="Topic">
			<generatedKey column="topic_id" sqlStatement="Mysql"
				identity="true" />
		</table>
		<table tableName="fanblog_knowledge" domainObjectName="Knowledge">
			<generatedKey column="knowledge_id" sqlStatement="Mysql"
				identity="true" />
		</table>
		<table tableName="fanblog_ask" domainObjectName="Ask">
			<generatedKey column="ask_id" sqlStatement="Mysql"
				identity="true" />
		</table>
		<table tableName="fanblog_blog" domainObjectName="Blog">
			<generatedKey column="blog_id" sqlStatement="Mysql"
				identity="true" />
		</table>
		
	</context>
</generatorConfiguration>